{"version":3,"sources":["js003.js"],"names":["Calculate","wrap_selector","el_btnWrap","calculate_objects","current_Numbers_array","answer","is_done_calculating","vm","document","querySelector","addEventListener","count","bind","length","map","item","number","join","format_marks","act","update_formula_element","update_answer_element","el_formula","getElementById","textContent","formula","el_answer","current_nums","get_answer","key","mark","division","times","plus","minus","equal","num","result","original","point","find","undefined","new_numbers","delete_last_in_ary","detect_equal_and_delete","get_new_calculate_objects","ary","pop","target","string","Number","reduce","accum","currentValue","currentIndex","array","e","dataset","action","before_adding_number_to_current_num","get_number","get_point","set_formula_and_clear_current_num","return_answer_string","update_elements","cal","init"],"mappings":"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","sourcesContent":["/**\r\n *  * 變數\r\n *      * 算式\r\n *          * 新數字 (進到算式之前先存為字串，判斷小數點)\r\n *          * 新動作 (加減乘除、=、AC)\r\n *  * 判斷點誰 => 做甚麼是\r\n *      * 數字            => 先存為字串\r\n *      * 'AC'           => 全部刪除\r\n *      * '加減乘除'      => (當前結果) 與 (新數字，此時存為number) 計算\r\n *      * '='            => (當前結果) 輸出\r\n *      * '.'            => 判斷小數點是否位置正確\r\n *          * 當前無值 => '0', '.'\r\n *          * 當前有值 =>\r\n *              * 舊字串無'.' => '舊字串', '.'\r\n *              * 舊字串有'.' => '舊字串'\r\n */\r\nclass Calculate {\r\n    constructor(wrap_selector) {\r\n        this.el_btnWrap = wrap_selector\r\n        // * eg: [{ act:'division', number: '10.2' }]\r\n        this.calculate_objects = []\r\n        // * eg: ['1','2','.','2']\r\n        this.current_Numbers_array = []\r\n        this.answer = null\r\n        this.is_done_calculating = false\r\n    }\r\n\r\n    init() {\r\n        const vm = this\r\n        if (document.querySelector(vm.el_btnWrap))\r\n            document\r\n                .querySelector(vm.el_btnWrap)\r\n                .addEventListener('click', vm.count.bind(vm))\r\n    }\r\n\r\n    // return Array\r\n    // 顯示在最上方的公式，不包含現在正在加值的數字\r\n    get formula() {\r\n        if (this.calculate_objects.length === 0) return ''\r\n        return this.calculate_objects\r\n            .map(\r\n                (item) =>\r\n                    `${item.number.join('')} ${this.format_marks(item.act)} `\r\n            )\r\n            .join('')\r\n    }\r\n\r\n    get current_nums() {\r\n        return this.current_Numbers_array.join('')\r\n    }\r\n\r\n    get get_answer() {\r\n        return this.answer\r\n    }\r\n\r\n    update_elements() {\r\n        this.update_formula_element()\r\n        this.update_answer_element()\r\n    }\r\n\r\n    update_formula_element() {\r\n        const el_formula = document.getElementById('current_formula')\r\n        el_formula.textContent = this.formula\r\n    }\r\n\r\n    update_answer_element() {\r\n        const el_answer = document.getElementById('current_answer')\r\n        if (this.current_nums === '' && this.get_answer === null)\r\n            el_answer.textContent = ''\r\n        else\r\n            el_answer.textContent =\r\n                this.current_nums === '' ? this.get_answer : this.current_nums\r\n    }\r\n\r\n    format_marks(key) {\r\n        const mark = {\r\n            division: '÷',\r\n            times: '×',\r\n            plus: '+',\r\n            minus: '-',\r\n            equal: '=',\r\n        }\r\n        return mark[key]\r\n    }\r\n\r\n    /**\r\n     *  * 若傳入 0 || d-0 則判斷是否直接在 current_Numbers_array push 0 || 00\r\n     *  * 若非，則取代 current_Numbers_array 第一個 0，或是 push 新數字\r\n     *  @param {String} num\r\n     *  @return {Array}\r\n     */\r\n    get_number(num = '') {\r\n        const result = [...this.current_Numbers_array]\r\n        switch (num) {\r\n            case '0':\r\n            case 'd-0':\r\n                if (result.length === 0) return ['0']\r\n                if (result[0] === '0') return ['0']\r\n                if (num === '0') return ['0']\r\n                return [...result, '0', '0']\r\n            default:\r\n                if (result.length === 1) if (result[0] === '0') return [num]\r\n                return [...result, num]\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  * 判斷 original = [] 是否有小數點\r\n     *      * 1. 長度為 0               => return 0.\r\n     *      * 2. 長度不為0 && 沒有\".\"    => push \".\"\r\n     *      * 3. 都不是就直接回傳原值\r\n     *\r\n     *  @param  {array} original\r\n     *  @return {array}\r\n     */\r\n    get_point(original = []) {\r\n        const point = () => original.find((item) => item === '.')\r\n        if (original.length === 0) return ['0', '.']\r\n        if (point() === undefined) return [...original, '.']\r\n        return [...original]\r\n    }\r\n\r\n    get_new_calculate_objects(mark = '') {\r\n        const current_nums = this.current_Numbers_array\r\n        const new_numbers =\r\n            current_nums[current_nums.length - 1] === '.'\r\n                ? this.delete_last_in_ary(current_nums)\r\n                : current_nums\r\n        return {\r\n            act: mark,\r\n            number: new_numbers,\r\n        }\r\n    }\r\n\r\n    before_adding_number_to_current_num() {\r\n        const vm = this\r\n        vm.detect_equal_and_delete()\r\n        vm.is_done_calculating = false\r\n    }\r\n\r\n    // * 若回傳目前輸入值的物件裡的數字陣列長度不為 0，則加入儲存計算公式的物件\r\n    // * 並且清除目前輸入值的陣列 (this.current_Numbers_array)\r\n    set_formula_and_clear_current_num(mark = '') {\r\n        const vm = this\r\n        if (vm.get_new_calculate_objects(mark)['number'].length !== 0)\r\n            vm.calculate_objects = [\r\n                ...vm.calculate_objects,\r\n                vm.get_new_calculate_objects(mark),\r\n            ]\r\n        vm.current_Numbers_array = []\r\n    }\r\n\r\n    detect_equal_and_delete() {\r\n        if (this.is_done_calculating) {\r\n            this.current_Numbers_array = []\r\n            this.calculate_objects = []\r\n            this.answer = null\r\n        }\r\n    }\r\n\r\n    delete_last_in_ary(ary) {\r\n        const result = [...ary]\r\n        result.pop()\r\n        return result\r\n    }\r\n\r\n    return_answer_string() {\r\n        const target = [...this.calculate_objects]\r\n        const num = (string) => Number(string)\r\n        return target.reduce((accum, currentValue, currentIndex, array) => {\r\n            if (currentIndex > 0) {\r\n                switch (array[currentIndex - 1].act) {\r\n                    case 'division':\r\n                        return num(accum) / num(currentValue.number.join(''))\r\n                    case 'times':\r\n                        return num(accum) * num(currentValue.number.join(''))\r\n                    case 'plus':\r\n                        return num(accum) + num(currentValue.number.join(''))\r\n                    case 'minus':\r\n                        return num(accum) - num(currentValue.number.join(''))\r\n                    default:\r\n                        throw '抓不到正確的運算符號 (+, -, *, /,)'\r\n                }\r\n            } else return num(currentValue.number.join(''))\r\n        }, 0)\r\n    }\r\n\r\n    count(e) {\r\n        if (e.target.dataset.action === undefined) return\r\n        const vm = this\r\n        const action = e.target.dataset.action\r\n        switch (action) {\r\n            case '0':\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '4':\r\n            case '5':\r\n            case '6':\r\n            case '7':\r\n            case '8':\r\n            case '9':\r\n            case 'd-0':\r\n                vm.before_adding_number_to_current_num()\r\n                vm.current_Numbers_array = vm.get_number(action)\r\n                break\r\n            case 'point':\r\n                vm.before_adding_number_to_current_num()\r\n                vm.current_Numbers_array = vm.get_point(\r\n                    vm.current_Numbers_array\r\n                )\r\n                break\r\n            case 'division':\r\n            case 'times':\r\n            case 'plus':\r\n            case 'minus':\r\n                vm.set_formula_and_clear_current_num(action)\r\n                break\r\n            case 'ac':\r\n                vm.calculate_objects = []\r\n                vm.current_Numbers_array = []\r\n                vm.answer = null\r\n                break\r\n            case 'delete':\r\n                vm.current_Numbers_array = vm.delete_last_in_ary(\r\n                    vm.current_Numbers_array\r\n                )\r\n                break\r\n            case 'equal':\r\n                vm.set_formula_and_clear_current_num(action)\r\n                vm.answer = vm.return_answer_string()\r\n                vm.is_done_calculating = true\r\n                break\r\n        }\r\n        this.update_elements()\r\n    }\r\n}\r\n\r\nconst cal = new Calculate('.btnsWrap').init()\r\n"],"file":"js003.js"}